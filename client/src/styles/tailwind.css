/**
 * This injects Tailwind's base styles, which is a combination of
 * Normalize.css and some additional base styles.
 *
 * You can see the styles here:
 * https://github.com/tailwindcss/tailwindcss/blob/master/css/preflight.css
 *
 * If using `postcss-import`, use this import instead:
 *
 * @import "tailwindcss/base";
 */
 @tailwind base;

 /**
  * This injects any component classes registered by plugins.
  *
  * If using `postcss-import`, use this import instead:
  *
  * @import "tailwindcss/components";
  */
 @tailwind components;

 .btn-blue {
  @apply bg-blue-500 text-white font-bold py-2 px-4 rounded;
}
.btn-blue:hover {
  @apply bg-blue-700;
}

.btn-gray {
  @apply bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded;
}
.btn-gray:hover {
  @apply bg-gray-500;
}
 
 /**
  * Here you would add any of your custom component classes; stuff that you'd
  * want loaded *before* the utilities so that the utilities could still
  * override them.
  *
  * Example:
  *
  * .btn { ... }
  * .form-input { ... }
  *
  * Or if using a preprocessor or `postcss-import`:
  *
  * @import "components/buttons";
  * @import "components/forms";
  */
 
 /**
  * This injects all of Tailwind's utility classes, generated based on your
  * config file.
  *
  * If using `postcss-import`, use this import instead:
  *
  * @import "tailwindcss/utilities";
  */
 @tailwind utilities;
 
 /**
  * Here you would add any custom utilities you need that don't come out of the
  * box with Tailwind.
  *
  * Example :
  *
  * .bg-pattern-graph-paper { ... }
  * .skew-45 { ... }
  *
  * Or if using a preprocessor or `postcss-import`:
  *
  * @import "utilities/background-patterns";
  * @import "utilities/skew-transforms";
  */

  
/* Using @apply to create a custom button to use throughout app */
  
/* CSS GRID SETUP UP TO MATCH SAME BREAK POINTS OF DEFAULT TAILWIND BREAKPOINTS*/
@media (max-width: 640px) {
    .grid {
      display: grid;
      grid-template-columns: 1fr;
      justify-content: space-between;
      flex-wrap: wrap;
      width: 100%;
    }
    .customHeight {
        height: 40vh;
    }
  
  }

  @media (min-width: 640px) {
    .grid {
      display: grid;
      grid-template-columns: 1fr 1fr;
      justify-content: space-between;
      flex-wrap: wrap;
      width: 100%;
    }
    .customHeight {
        height: 50vh;
    }
  }
  
  @media (min-width: 768px) {
    .grid {
      display: grid;
      grid-template-columns: 1fr 1fr 1fr;
      justify-content: space-between;
      flex-wrap: wrap;
      width: 100%;
    }
    .customHeight {
        height: 60vh;
    }
  }
  
@media (min-width: 1024px) {
  .grid {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
    justify-content: space-between;
    flex-wrap: wrap;
    width: 100%;
  }
  .customHeight {
    height: 70vh;
  }
}
  
  @media (min-width: 1280px) {
    .grid {
      display: grid;
      grid-template-columns: 1fr 1fr 1fr 1fr 1fr;
      justify-content: space-between;
      flex-wrap: wrap;
      width: 100%;
    }
    .customHeight {
        height: 75vh;
    }
  }

  .outlineText {
    text-shadow:
      -.5px -.5px 0 #000,
      .5px -.5px 0 #000,
      -.5px .5px 0 #000,
      .5px .5px 0 #000;
  }

  .modal {
    background: rgba(0, 0, 0, .7);
    position: fixed;
  }

  .modalVport {
    height: 95vh;
    width: 85vh;
  }

  .rotate180 {
    transform: rotate(180deg);
  }

  .loader {
    border-top-color: #3498db;
    -webkit-animation: spinner 1.5s linear infinite;
    animation: spinner 1.5s linear infinite;
  }
  
  @-webkit-keyframes spinner {
    0% { -webkit-transform: rotate(0deg); }
    100% { -webkit-transform: rotate(360deg); }
  }
  
  @keyframes spinner {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }